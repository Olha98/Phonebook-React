{"version":3,"sources":["Components/Form/FillterForm/FillterForm.module.css","Components/Form/Form.module.css","Components/Form/ListPeople/ListItemPeople/ListItemPeople.module.css","Components/Form/ListPeople/ListPeople.module.css","Components/Form/ContactForm/ContactForm.module.css","Components/Alert/Alert.module.css","Redux/Operations/operations.js","Components/Form/ListPeople/ListItemPeople/ListItemPeople.js","Redux/Selections/selections.js","Components/Form/ListPeople/ListPeople.js","Components/Form/FillterForm/FillterForm.js","Components/Form/ContactForm/ContactForm.js","Components/Alert/Alert.js","Components/Form/Form.js","Pages/ContactsPage.js"],"names":["module","exports","axios","defaults","baseURL","description","dispatch","console","log","actions","addContactRequest","post","then","responce","addContactSuccess","id","data","name","catch","error","addContactError","a","getContactsRequest","get","result","keys","Object","reduce","acc","key","push","getContactsSuccess","getContactsError","removeContactRequest","delete","removeContactSuccess","removeContactError","connect","onRemoveContact","e","operations","target","number","className","style","listItem","type","onClick","getContactSelection","state","contacts","getAlertSelection","alert","getFilterSelection","filter","getContactFilterSelection","contact","toLowerCase","includes","selections","listPeopleBox","TransitionGroup","list","map","CSSTransition","timeout","classNames","uuidv4","mapDispatchToProps","onfilterChange","Actions","filterChange","value","class","boxContact","boxFilter","label","boxInput","placeholder","onChange","boxSubmit","ContactForm","handleChange","css","formContact","nameInput","submitInput","AlertModal","boxAlert","initialState","FormContacts","setState","handleSubmit","preventDefault","errorContacts","props","find","errorItem","alertShow","onAddContacts","onAlertError","setTimeout","this","onGetContactOperation","boxForm","in","appear","unmountOnExit","Alert","onSubmit","formContainer","Component","contactOperation","alertError","ContactsPage"],"mappings":"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","file":"static/js/3.75257e78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"FillterForm_contactsTitle__2dq8G\",\"boxContact\":\"FillterForm_boxContact__1De7L\",\"boxFilter\":\"FillterForm_boxFilter__U_ZRt\",\"boxInput\":\"FillterForm_boxInput__3K_lm\",\"boxSubmit\":\"FillterForm_boxSubmit__3TKp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Form_appear__3IdL4\",\"appearActive\":\"Form_appearActive__3KVCU\",\"formContainer\":\"Form_formContainer__2nbjZ\",\"boxAlert\":\"Form_boxAlert__3ADQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItemPeople_listItem__2L8GY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListPeople_list__3AFl1\",\"enter\":\"ListPeople_enter__1sOYW\",\"enterActive\":\"ListPeople_enterActive__3AIHW\",\"exit\":\"ListPeople_exit__342pp\",\"exitActive\":\"ListPeople_exitActive__2ftRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxContact\":\"ContactForm_boxContact__2VaVh\",\"formContact\":\"ContactForm_formContact__2dLwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Alert_enter__1WdeV\",\"enterActive\":\"Alert_enterActive__2QV1f\",\"exit\":\"Alert_exit__enb_h\",\"exitActive\":\"Alert_exitActive__1s8X6\",\"alert\":\"Alert_alert__vf7Wo\",\"message\":\"Alert_message__JfTYJ\"};","import actions from '../Actions/Actions'\r\nimport axios from 'axios'\r\n\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst addContactOperation = description => dispatch => {\r\nconsole.log(description, \"description\")\r\n  dispatch(actions.addContactRequest())\r\n  axios.post('/contacts', {...description})\r\n    .then(responce => {\r\n\r\n      console.log(responce, \"responce\")\r\n      dispatch(actions.addContactSuccess({ ...description, id: responce.data.name }))\r\n    }).catch(error => dispatch(actions.addContactError(error)))\r\n}\r\n\r\n\r\nconst removeContactOperation  = id => dispatch => {\r\n  dispatch(actions.removeContactRequest());\r\n  axios\r\n    .delete(`contacts/${id}`)\r\n.then(() => {\r\n  console.log(id,\"SuccessID\")\r\n  dispatch(actions.removeContactSuccess(id))})\r\n    .catch(error => {\r\n      console.log(error,\"error\")\r\n      dispatch(actions.removeContactError(error))});\r\n};\r\n\r\n\r\n\r\nconst getContactOperation = () => async dispatch => {\r\n\r\n  dispatch(actions.getContactsRequest())\r\n  try {\r\n    const result = await axios.get('/contacts');\r\n    console.log(result, \"RESULT\")\r\n    const keys = Object.keys(result.data);\r\n    const data = keys.reduce((acc, key) => {\r\n      acc.push({ id: key, ...result.data[key] })\r\n      return acc;\r\n    }, [])\r\n    dispatch(actions.getContactsSuccess(data))\r\n  } catch (error) {\r\n    dispatch(actions.getContactsError(\"Something went wrong\"))\r\n  }\r\n \r\n}\r\n\r\n\r\n\r\nexport default { addContactOperation, getContactOperation, removeContactOperation }","import React from 'react';\r\nimport style from './ListItemPeople.module.css'\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../../../Redux/Operations/operations'\r\n\r\nconst ListItemPeople = ({ name, number, id, onRemoveContact }) => {\r\n  return (\r\n    <>\r\n      <li className={style.listItem}>{name}: {number}\r\n      <button type=\"button\" onClick={onRemoveContact} name={id}>Delite</button>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRemoveContact: (e) => {\r\n      dispatch(operations.removeContactOperation(e.target.name))},\r\n  } \r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ListItemPeople)\r\n\r\n","// import { createSelector } from '@reduxjs/toolkit';\r\n\r\n\r\nconst getContactSelection = state => state.contacts\r\nconst getAlertSelection = state => state.alert\r\nconst getFilterSelection = state => state.filter\r\nconst getContactFilterSelection = ([getContactSelection], state => state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase()))) \r\nexport default { getContactSelection, getAlertSelection, getFilterSelection, getContactFilterSelection }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     ","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListItemPeople from './ListItemPeople/ListItemPeople';\r\nimport style from './ListPeople.module.css'\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\nimport selections from '../../../Redux/Selections/selections'\r\n\r\nconst ListPeople = ({ contacts}) => {\r\nconsole.log(contacts, \"contacts\")\r\n  return (\r\n    <div className={style.listPeopleBox}>\r\n    <TransitionGroup className={style.list}>\r\n\r\n      {contacts.map(contact =>\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={500}\r\n          classNames={style}>\r\n          <ListItemPeople key={uuidv4()} {...contact}/>\r\n        </CSSTransition>\r\n\r\n      )}\r\n    </TransitionGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({state}) => ({\r\n contacts: selections.getContactFilterSelection(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(ListPeople)\r\n\r\n","import React from 'react';\r\nimport style from './FillterForm.module.css'\r\nimport './FillterForm.module.css'\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../../Redux/Actions/Actions'\r\nimport ListPeople from '../ListPeople/ListPeople';\r\n\r\nconst FillterForm=({value, onfilterChange})=>{\r\nreturn(\r\n  <div class={style.boxContact}>\r\n  <form className={style.boxFilter}>\r\n    \r\n      <label className={style.label}>\r\n          <input type=\"text\" name=\"filter\" className={style.boxInput}  placeholder=\"FIND CONTACTS BY NUMBER...\" value={value} onChange={(e) => {\r\n            onfilterChange(e.target.value)\r\n            }}/>\r\n      </label>\r\n      <button type=\"submit\" className={style.boxSubmit}></button>\r\n      <ListPeople />\r\n</form>\r\n</div>\r\n)}\r\n\r\nconst mapDispatchToProps = {\r\n  onfilterChange: Actions.filterChange,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FillterForm)\r\n\r\n\r\n\r\n// {/* <div class=\"d6\">\r\n// <form>\r\n//   <input type=\"text\" placeholder=\"Искать здесь...\">\r\n//   <button type=\"submit\"></button>\r\n// </form>\r\n// </div> */}\r\n","import React from 'react';\r\nimport css from './ContactForm.module.css'\r\n\r\n\r\nconst ContactForm = ({ name, number, handleChange }) => {\r\n  return (\r\n  \r\n <div className={css.boxContact}>\r\n      <form className={css.formContact}>\r\n        <h2>Phonebook</h2>\r\n      <label>\r\n        <p>Name</p>\r\n        <input type=\"text\" name=\"name\" onChange={handleChange} value={name} className={css.nameInput}/>\r\n      </label>\r\n      <label>\r\n        <p>Number</p>\r\n        <input type=\"text\" name=\"number\" onChange={handleChange} value={number} className={css.nameInput}/>\r\n      </label>\r\n      <button type=\"submit\" className={css.submitInput}>Add</button> \r\n    </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react';\r\nimport css from './Alert.module.css'\r\n\r\n\r\nconst AlertModal = () => {\r\n  return (\r\n    <div>\r\n      <div  className={css.boxAlert}>\r\n        <p>Contact already exists!Oh snap! You got an error!</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertModal\r\n\r\n","import React, { Component } from 'react';\r\nimport style from './Form.module.css'\r\nimport './Form.css'\r\n// import ListPeople from './ListPeople/ListPeople';\r\nimport FillterForm from './FillterForm/FillterForm';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport AlertModal from '../Alert/Alert'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../Redux/Actions/Actions'\r\nimport contactOperation from '../../Redux/Operations/operations'\r\nimport selections from '../../Redux/Selections/selections'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n}\r\n\r\nclass FormContacts extends Component {\r\n  state = {\r\n    ...initialState\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onGetContactOperation()\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  \r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const errorContacts = this.props.contacts\r\n\r\n    if (errorContacts) {\r\n      const error = errorContacts.map(contact => contact)\r\n      error.find(errorItem => errorItem.name === this.state.name && errorItem.number === this.state.number)\r\n        ? this.alertShow()\r\n        : this.props.onAddContacts({ name, number });\r\n    }\r\n    this.setState({ ...initialState })\r\n  }\r\n\r\n  alertShow = () => {\r\n    this.props.onAlertError()\r\n    setTimeout(() => this.props.onAlertError(), 5000)\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { alert } = this.props\r\n    return (\r\n      <div className={style.boxForm}>\r\n        {alert && <CSSTransition\r\n          classNames={style}\r\n          in={true}\r\n          appear={true}\r\n          timeout={1500}\r\n          unmountOnExit\r\n        >\r\n          <AlertModal />\r\n        </CSSTransition>}\r\n        <Form onSubmit={this.handleSubmit} className={style.formContainer}>\r\n         \r\n          <ContactForm handleChange={this.handleChange} name={name} number={number} />\r\n        </Form>\r\n        <FillterForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ state }) => {\r\n  return {\r\n    value: selections.getFilterSelection(state),\r\n    alert: selections.getAlertSelection(state),\r\n    contacts: selections.getContactSelection(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddContacts: (name, number) => dispatch(contactOperation.addContactOperation(name, number)),\r\n    onAlertError: () => dispatch(Actions.alertError()),\r\n    onGetContactOperation: () => dispatch(contactOperation.getContactOperation()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContacts)\r\n","import React from 'react'\r\nimport FormContacts from '../Components/Form/Form'\r\n\r\nconst ContactsPage = () => {\r\n  return (\r\n    <FormContacts/>\r\n  )\r\n};\r\n\r\nexport default ContactsPage\r\n\r\n"],"sourceRoot":""}